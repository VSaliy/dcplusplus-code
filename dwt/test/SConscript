# vim: set filetype=py
 
Import('dev source_path')

env = dev.env.Clone()

env.Append(LIBS = ['comctl32', 'ws2_32', 'ole32', 'gdi32', 'comdlg32', 'iphlpapi', 'winmm', 'shlwapi', 'oleaut32', 'uuid', 'uxtheme'])

env.Append(CPPPATH = ['#/dwt/include'])

if env['RC'] == 'rc': # MSVC
	env.Append(RCFLAGS = ['/d' + env['arch']])
elif env['RC'].find('windres') != -1: # MinGW
	env.Append(RCFLAGS = ['-D' + env['arch']])
else:
	print 'Unknown resource compiler.'
	Return()
res = env.RES(dev.get_sources(source_path, '*.rc'))

# imitate build_util's prepare_build
env.VariantDir(dev.get_build_path(source_path), '.', duplicate = 0)
if env['msvcproj']:
	ret = dev.build_lib(env, None, None, dev.cpp_lib, 'dwt-test')
else:
	import os
	ret = []
	for f in Glob('*.cpp'):
		sources = dev.get_sources(source_path, str(f))
		ret.append(env.Program(dev.get_target(source_path, os.path.basename(str(f)).replace('.cpp', ''), in_bin = False), [sources, res, dev.dwt, dev.dwarf, dev.boost, dev.bzip2, dev.intl]))

env.Help("\nYou can build dwt tests by running 'scons dwt/test'\n")

Return('ret')
