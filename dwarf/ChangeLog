2011-06-12  DavidAnderson <davea42@earthlink.net>
     * libdwarf.h: Added dwarf_producer_init_c() and its
       callback functions. Adds a user_data void* to the
       init and callback functions for user convenience.
     * libdwarf2p.1.m: Documented dwarf_producer_init_c().
       Rev 1.30.
     * libdwarf2p.1.pdf: Regenerated
     * pro_init.c: Implement dwarf_producer_init_c().
     * pro_opaque.h: Add fields for dwarf_producer_init_c().
     * pro_reloc_stream.c: Implement dwarf_producer_init_c() callback.
     * pro_reloc_symbolic.c: Implement dwarf_producer_init_c() callback.
     * pro_section.c: Implement dwarf_producer_init_c() callback.
2011-06-09  DavidAnderson <davea42@earthlink.net>
     * dwarf_form.c: Code getting access to CU context and
       dbg was repeated many times. Refactored the common
       code into a file-static subprogram.
2011-06-08  DavidAnderson <davea42@earthlink.net>
     * libdwarf2.1.mm,libdwarf2.1.pdf: Now discusses
       DW_AT_data_member_location in the context
       if dwarf_loclist_n(). Rev 1.96
2011-06-08  DavidAnderson <davea42@earthlink.net>
     * dwarf_init_finish.c: Inserted missing include of
       dwarf_harmless.h.
2011-06-07  DavidAnderson <davea42@earthlink.net>
     * dwarf_elf_access.c: Added EM_QUALCOMM_DSP6 
       machine so that relocations work on a
       Qualcomm relocatable object in the dwarf regressiontests.
     * dwarf_util.c: Fixed indent problems added in previous
       change.
2011-06-07  DavidAnderson <davea42@earthlink.net>
     * dwarf_util.c(_dwarf_get_abbrev_for_code): If there is no
       section padding the code could read-from-memory 
       one past the end of the section
       which could (in very rare circumstances) coredump
       an application. In addition, earlier in the same funcion 
       we did not account for the case where we had already read to
       end of section. Both fixed.
2011-06-06  DavidAnderson <davea42@earthlink.net>
     * dwarf_error.c: Fix a typo in an error string.
     * dwarf_query.c: Implement the new function 
       dwarf_get_verion_of_die().
     * libdwarf.h: Add prototype for dwarf_get_verion_of_die().
     * libdwarf2.1.mm: for dwarf_form_{s,u}data, mention
       the DW_FORM_data{4,8} class ambiguity.
       Document the new function dwarf_get_verion_of_die().
       Document version now 1.95.
     * libdwarf2.1.pdf: Regenerate.
2011-06-04  DavidAnderson <davea42@earthlink.net>
     * NEWS: Mention the non-elf documentation oversight.
     * dwarf_arange.c,dwarf_elf_access.c, dwarf_frame3.c,
       dwarf_funcs.c,dwarf_global.c,dwarf_init_finish.c,
       dwarf_line.c,dwarf_loc.c,dwarf_macro.c,dwarf_print_lines.c,
       dwarf_pubtypes.c,dwarf_query.c,dwarf_ranges.c,dwarf_string.c,
       dwarf_types.c,dwarf_vars.c, dwarf_weaks.c: Everything loading
       a section now checks the result for 'empty' and returns
       DW_DLV_NO_ENTRY explicitly.  This makes it easier to
       do nothing safely when there is no data.
2011-06-04  DavidAnderson <davea42@earthlink.net>
     * dwarf_line.c (_dwarf_internal_srclines): Created new local functions
       to unify some repeated code in into function calls.  One of the
       earlier inline-repetitions was coded wrong.  Added {} to ensure clarity
       on the intended scope a couple places. Added initializers to
       a couple of local variables.
2011-06-04  DavidAnderson <davea42@earthlink.net>
     * dwarf_alloc.c: Added include "dwarf_harmless.h" so
       a prototype is visible here.
     * dwarf_form.c (dwarf_convert_to_global_offset,dwarf_global_formref):                   Deleted unused local variables.
     * dwarf_frame.c (dwarf_initialize_fde_table): Uses local instead
       of ignoring it (avoids compiler warning).
     * dwarf_frame2.c (_dwarf_get_fde_list_internal): Delete unused
       local variable.
     * dwarf_line.c (dwarf_srcfiles): Call uses variable expected
       signedness now, avoiding compiler warning.
     * dwarf_print_lines.c: Printf was missing %, gcc -Wall pointed
       out the mistake.
2011-04-23  DavidAnderson <davea42@earthlink.net>
     * pro_error.c (_dwarf_p_error): The code attempting to deal with
       an unexpected error code was doing an inappropriate cast and
       an inappropriate (possibly out-of-bounds) reference to an array
       of strings.  Removed the cast and removed the questionable 
       array reference.
     * dwarf_frame.c: A couple lines were indented badly. Fixed the indentation.
     * pro_line.h: Now __x86_64 also gets MIN_INST_LENGTH 1
2011-03-29  DavidAnderson <davea42@earthlink.net>
     * everything:   Redid all indentations for
       consistency.  Updated copyrights.  Interfaces
       did not change, existing clients should not
       encounter difficulty.
2011-03-13  DavidAnderson <davea42@earthlink.net>
     * libdwarf.h, dwarf_error.c: Added 
       DW_DLE_DEBUG_FRAME_POSSIBLE_ADDRESS_BOTCH.
2011-01-20  DavidAnderson <davea42@earthlink.net>
     * dwarf.h: Added some Apple attribute extensions.
2011-01-13  DavidAnderson <davea42@earthlink.net>
     * dwarf_print_lines.c: Handles DW_FORM_exprloc now. With -vvv
       it now prints the dwarf version of the line table header.
     * dwarf_line.c:  Handles DW_FORM_exprloc now.
2011-01-13  DavidAnderson <davea42@earthlink.net>
     * libdwarf.h: Added new function dwarf_get_die_address_size().
     * libdwarf2.1.mm: Documented new function dwarf_get_die_address_size().
       Rev 1.91, 12 January 2011
     * libdwarf2.1.pdf: Regenerated.
     * dwarf_form.c: Corrected handling of DW_FORM_exprloc.
     * dwarf_query.c: Implemented dwarf_get_die_address_size().
       Corected handling of DW_FORM_exprloc.
     * dwarf_util.c: Added handling of DW_FORM_exprloc and
       DW_FORM_flag_present.
