Import('dev source_path')

if dev.env['CC'] == 'cl': # MSVC
	# from the gettext win32-readme: "MS Visual C/C++ with "nmake" is no longer supported."
	# therefore, we use a pre-compiled library and directly link to it.
	dev.env.Prepend(LIBS=['intl'])
	dev.env.Append(LIBPATH=['#/intl/lib'])

elif 'mingw' in dev.env['TOOLS']:
	env, target, sources = dev.prepare_build(source_path, 'aintl', '*.c', in_bin=False)

	env.Append(CPPDEFINES=['LOCALEDIR=\\"\\"', 'LOCALE_ALIAS_PATH=\\"\\"', 'INSTALLDIR=\\"\\"', 'LIBDIR=\\"\\"', 'BUILDING_LIBINTL', 
		'IN_LIBINTL', 'ENABLE_RELOCATABLE=1', 'NO_XMALLOC', 'HAVE_CONFIG_H',
		'set_relocation_prefix=libintl_set_relocation_prefix', 'relocate=libintl_relocate'])
	env.Append(CPPPATH='#/intl')

	dev.env.Append(LIBS=['aintl'])
	import os
	dev.env.Append(LIBPATH=[os.path.dirname(target)])
	ret = env.StaticLibrary(target, sources)
	Return('ret')

else:
	print "intl only built on win32"

Return()
