Make unzOpen64 open files with _wfopen on Windows. That seems to have been that function's initial
purpose (it is documented as such) but it looks like it got lost along the way.

--- zlib/ioapi.c	2012-01-21 19:58:46.000000000 +0100
+++ zlib/ioapi.c	2013-04-29 20:59:57.000000000 +0200
@@ -113,6 +113,22 @@
 static voidpf ZCALLBACK fopen64_file_func (voidpf opaque, const void* filename, int mode)
 {
     FILE* file = NULL;
+
+#if defined(_WIN32) && defined(_UNICODE)
+    const wchar_t* mode_fopen = NULL;
+    if ((mode & ZLIB_FILEFUNC_MODE_READWRITEFILTER)==ZLIB_FILEFUNC_MODE_READ)
+        mode_fopen = L"rb";
+    else
+    if (mode & ZLIB_FILEFUNC_MODE_EXISTING)
+        mode_fopen = L"r+b";
+    else
+    if (mode & ZLIB_FILEFUNC_MODE_CREATE)
+        mode_fopen = L"wb";
+
+    if ((filename!=NULL) && (mode_fopen != NULL))
+        file = _wfopen((const wchar_t*)filename, mode_fopen);
+
+#else
     const char* mode_fopen = NULL;
     if ((mode & ZLIB_FILEFUNC_MODE_READWRITEFILTER)==ZLIB_FILEFUNC_MODE_READ)
         mode_fopen = "rb";
@@ -125,6 +141,9 @@
 
     if ((filename!=NULL) && (mode_fopen != NULL))
         file = FOPEN_FUNC((const char*)filename, mode_fopen);
+
+#endif
+
     return file;
 }
 
